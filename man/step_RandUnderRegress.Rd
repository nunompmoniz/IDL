% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RandUnderRegress.R
\name{step_RandUnderRegress}
\alias{step_RandUnderRegress}
\title{Random Undersampling for Imbalanced Regression Tasks}
\usage{
step_RandUnderRegress(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  und.perc = 0.5,
  perc.list = NULL,
  C.perc = NULL,
  threshold = 0.9,
  target = NULL,
  skip = TRUE,
  id = rand_id("RandUnderRegress")
)
}
\arguments{
\item{id}{}
}
\value{

}
\description{

}
\examples{
library(tidymodels)
library(modeldata)

load("~/Desktop/Academia/Datasets/RegressionDatasets_FULL.RData")
ds <- DSs[[48]]@data
form <- DSs[[48]]@formula

ds <- tibble(ds)

up_rec <- recipe(shares ~ ., data = ds) \%>\%
  step_RandUnderRegress(shares, und.perc = 0.5) \%>\%
  prep()

tidy(up_rec, number=1)

training <- up_rec \%>\%
  bake(new_data = NULL)

plot(density(ds$shares))
lines(density(training$shares), col=34)

folds <- vfold_cv(ds, v = 5)

tune_rec <- recipe(shares ~ ., data = ds) \%>\%
  step_RandUnderRegress(shares, und.perc = tune())

lin_mod <-
  decision_tree() \%>\%
  set_mode("regression") \%>\%
  set_engine("rpart")

wf <- workflow() \%>\%
  add_recipe(tune_rec) \%>\%
  add_model(lin_mod)

lambda_grid <- grid_random(und.perc(),size = 3)

res <- tune_grid(wf,
                 resamples = folds,
                 grid = lambda_grid,control = control_grid(save_pred=TRUE))
# metrics = aux_metrics)

res <- add_sera(res, form)

show_best(res, metric="rmse")
show_best(res, metric="rsq")
show_best(res, metric="sera")

}
